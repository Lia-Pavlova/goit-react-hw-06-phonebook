{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","App.jsx","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","App.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContacts","className","s","map","id","name","number","item","tel","btnDel","onClick","Filter","value","onChange","filter","label","text","type","pattern","title","required","input","ContactForm","onSubmit","useState","setName","setNumber","handleChange","event","currentTarget","form","preventDefault","btnAdd","App","setContacts","setFilter","useEffect","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","getFilterVisibleContacts","normalizeFilter","toLowerCase","contact","includes","getVisibleContacts","app","contactsNew","shortid","generate","some","alert","prevState","titleContacts","contactsId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.025ee048.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btnAdd\":\"ContactForm_btnAdd__1TJSN\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className={s.contacts}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.item} key={id}>\n        <p className={s.name}>{name}</p>\n        <p className={s.tel}>{number}</p>\n        <button className={s.btnDel} onClick={() => onDeleteContacts(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired\n  ).isRequired,\n  onDeleteContacts: PropTypes.func.isRequired,\n};\n\nexport { ContactList };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filter}>\n    <label className={s.label}>\n      <p className={s.text}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n        required\n        value={value}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport { Filter };\n","import { useState } from \"react\";\nimport s from \"./ContactForm.module.css\";\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  // input  to \"input\"\n\n  const handleChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  // Another variant:\n\n  // const handleNameChange = event => {\n  //   setName(event.currentTarget.value);\n  // };\n  // const handleNumberChange = event => {\n  //   setNumber(event.currentTarget.value);\n  // };\n\n  // add contact via button\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  // clear input fields\n\n  // resetInput = () => {\n  //   this.setState({ name: \"\", number: \"\" });\n  // };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan etc.\"\n          required\n          value={name}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"The phone number must be digits and may contain spaces, dashes, parentheses and may start with +\"\n          required\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <button type=\"submit\" className={s.btnAdd}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport { ContactForm };\n","import { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\n\n// Import components\nimport { ContactList } from \"./components/ContactList/ContactList\";\nimport { Filter } from \"./components/Filter/Filter\";\nimport { ContactForm } from \"./components/ContactForm/ContactForm\";\n\n// Import pnotify\nimport \"@pnotify/core/dist/BrightTheme.css\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/confirm/dist/PNotifyConfirm.css\";\n\nimport s from \"./App.module.css\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  // Requests to remote resources\n\n  useEffect(() => {\n    const parsedContacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (parsedContacts) {\n      setContacts(parsedContacts);\n    }\n  }, []);\n\n  // Record into localStorage\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  // Add contact\n\n  const forSubmitHandler = (text) => {\n    // \"id\" generation\n    const contactsNew = {\n      id: shortid.generate(),\n      ...text,\n    };\n\n    const someContact = contacts.some(\n      (contact) => contact.name.toLowerCase() === text.name.toLowerCase()\n    );\n\n    if (someContact) {\n      alert(`${text.name} is already in contacts`);\n      return;\n    }\n\n    // Add the new contact\n\n    setContacts((prevState) => [contactsNew, ...prevState]);\n  };\n\n  // Delete the contact\n\n  const deleteContacts = (contactsId) => {\n    setContacts((contacts) =>\n      contacts.filter((contact) => contact.id !== contactsId)\n    );\n  };\n\n  // Filter\n\n  const changeFilter = (event) => {\n    return setFilter(event.currentTarget.value);\n  };\n\n  // Searching by filter\n\n  const getVisibleContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const getFilterVisibleContacts = getVisibleContacts();\n\n  return (\n    <div className={s.app}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={forSubmitHandler} />\n      <h2 className={s.titleContacts}>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getFilterVisibleContacts}\n        onDeleteContacts={deleteContacts}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"item\":\"ContactList_item__3YsZK\",\"name\":\"ContactList_name__2WLgA\",\"tel\":\"ContactList_tel__Ba6p5\",\"btnDel\":\"ContactList_btnDel__W2VVH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"label\":\"Filter_label__3DcZT\",\"text\":\"Filter_text__20oAI\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1kX79\",\"title\":\"App_title__-GfWs\",\"titleContacts\":\"App_titleContacts__41vwQ\"};"],"sourceRoot":""}